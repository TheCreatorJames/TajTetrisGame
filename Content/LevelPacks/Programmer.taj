-|TajLevelSave ["  $Score 1 + %Score 50 >= if WinGame end "Lines`-`" $Score string + "/50" + SetText "] _ RowCleared [" Nothing "] _ RedCleared [" Nothing "] _ BlueCleared [" Nothing "] _ GreenCleared [" Nothing "] _ TealCleared [" Nothing "] _ OrangeCleared [" Nothing "] _ YellowCleared [" Nothing "] _ AnyCleared [" Nothing "] _ PurpleCleared ["  0 %Score del ClassicMode "Inspire`This`Programmer`Through`Classic`Tetris" SetText "] _ Start -|TajParser -|Stacker [ ] _ Stack Build _ Stack [ [" Score "] ] _ Keys [ -|StackNumber <Float> AAAAAA== _ Value Build ] _ Values Build _ Parser [" Inspire This Programmer Through Classic Tetris "] _ Text <Bool> AA== _ Flashlight -|ClassicTetris -|ByteBoard [ <Byte> AAA= AAA= AAA= AAA= AAA= AAA= EAA= AAA= AAA= AAA= AAA= EAA= AAA= AAA= AAA= AAA= EAA= AAA= AAA= AAA= AAA= EAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= AAA= ] _ Board Build _ TheBoard <Int> AwAAAA== _ X AQAAAA== _ Y [" d3 "] _ Piece <Byte> AQA= _ Color AAA= _ Low AAA= _ High [ [" d1r2 "] [" d1l2 "] [" l1r2l1d1 "] [" r1d1l1 "] [" r1d1r1 "] [" l1d1l1 "] [" d3 "] ] _ Pieces AAA= _ Mode <Bool> AA== _ Flashlight AA== _ PowerUp Build _ Game -|World [ -|LRect <Int> QwEAAA== _ X ZwIAAA== _ Y vQIAAA== _ Width sAAAAA== _ Height -|Color <Byte> /wA= _ R /wA= _ G /wA= _ B /wA= _ A Build _ Color -|Color AAA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Border <Bool> AQ== _ BorderB Build -|LightLevelCircle <Int> mAIAAA== _ X sgEAAA== _ Y 3AEAAA== _ Radius <Bool> AQ== _ Culled -|Color <Byte> twA= _ R twA= _ G AAA= _ B /wA= _ A Build _ Color Build -|LRect <Int> CQMAAA== _ X MAIAAA== _ Y /QAAAA== _ Width ZgAAAA== _ Height -|Color <Byte> /wA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Color -|Color AAA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Border <Bool> AQ== _ BorderB Build -|LRect <Int> 0AMAAA== _ X BQIAAA== _ Y NwAAAA== _ Width LQAAAA== _ Height -|Color <Byte> dgA= _ R dAA= _ G gQA= _ B /wA= _ A Build _ Color -|Color AAA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Border <Bool> AQ== _ BorderB Build -|LRect <Int> ygEAAA== _ X 5wEAAA== _ Y fAAAAA== _ Width mwAAAA== _ Height -|Color <Byte> LAA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Color -|Color AAA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Border <Bool> AQ== _ BorderB Build -|LRect <Int> 3wEAAA== _ X AAIAAA== _ Y VQAAAA== _ Width KQAAAA== _ Height -|Color <Byte> EwA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Color -|Color AAA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Border <Bool> AQ== _ BorderB Build -|LRect <Int> 2gEAAA== _ X OgIAAA== _ Y WQAAAA== _ Width KQAAAA== _ Height -|Color <Byte> EQA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Color -|Color AAA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Border <Bool> AQ== _ BorderB Build -|LevelPerson <Int> 4wEAAA== _ X -|Color <Byte> VAA= _ R PAA= _ G PgA= _ B /wA= _ A Build _ Color -|Color AAA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Border <Int> dAIAAA== _ Y ZAAAAA== _ Width ZAAAAA== _ Height <Byte> AAA= _ Blink [" Programming.taj "] _ BodyAnimation <Int> BwAAAA== _ Frame <Bool> AQ== _ Playing AQ== _ Loop ["  "] _ Name Build -|LRect <Int> WgIAAA== _ X rAIAAA== _ Y bQAAAA== _ Width GwAAAA== _ Height -|Color <Byte> BQA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Color -|Color AAA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Border <Bool> AQ== _ BorderB Build -|LRect <Int> sAIAAA== _ X VwIAAA== _ Y FgAAAA== _ Width VQAAAA== _ Height -|Color <Byte> CAA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Color -|Color AAA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Border <Bool> AQ== _ BorderB Build -|LightLevelCircle <Int> jwIAAA== _ X iwIAAA== _ Y OQAAAA== _ Radius <Bool> AQ== _ Culled -|Color <Byte> CQA= _ R ZQA= _ G rAA= _ B /wA= _ A Build _ Color Build -|LRect <Int> MgIAAA== _ X DQEAAA== _ Y EwAAAA== _ Width kwAAAA== _ Height -|Color <Byte> CwA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Color -|Color AAA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Border <Bool> AQ== _ BorderB Build -|LRect <Int> EAIAAA== _ X CQEAAA== _ Y UgAAAA== _ Width FgAAAA== _ Height -|Color <Byte> BgA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Color -|Color AAA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Border <Bool> AQ== _ BorderB Build -|LRect <Int> aQIAAA== _ X CwEAAA== _ Y UAAAAA== _ Width lQAAAA== _ Height -|Color <Byte> BwA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Color -|Color AAA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Border <Bool> AQ== _ BorderB Build -|LRect <Int> hQIAAA== _ X IwEAAA== _ Y HQAAAA== _ Width PQAAAA== _ Height -|Color <Byte> /wA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Color -|Color AAA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Border <Bool> AQ== _ BorderB Build -|LRect <Int> hAIAAA== _ X fgEAAA== _ Y IQAAAA== _ Width IQAAAA== _ Height -|Color <Byte> /wA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Color -|Color AAA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Border <Bool> AQ== _ BorderB Build -|LRect <Int> 7AIAAA== _ X BwEAAA== _ Y egAAAA== _ Width HAAAAA== _ Height -|Color <Byte> CQA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Color -|Color AAA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Border <Bool> AQ== _ BorderB Build -|LRect <Int> JgMAAA== _ X GgEAAA== _ Y FQAAAA== _ Width dAAAAA== _ Height -|Color <Byte> CAA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Color -|Color AAA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Border <Bool> AQ== _ BorderB Build -|LRect <Int> yAIAAA== _ X igEAAA== _ Y cwAAAA== _ Width FAAAAA== _ Height -|Color <Byte> CgA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Color -|Color AAA= _ R AAA= _ G AAA= _ B /wA= _ A Build _ Border <Bool> AQ== _ BorderB Build ] _ Objects Build _ World Build 
